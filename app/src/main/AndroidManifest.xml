<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="dev.akampf.fileshare">

    <!--
     fine location, access wifi state, change wifi state and internet are all needed for p2p functionality
	https://developer.android.com/training/connect-devices-wirelessly/wifi-direct#permissions
	Oddly, here:
	https://developer.android.com/guide/topics/connectivity/wifip2p#setup
	there are also the access network state and change network state permissions listed as required for wifi direct
	IN CASE OF PROBLEMS: these could be missing
    -->

    <!-- android "protection level": dangerous - needs runtime permission checks -->
    <uses-permission
        android:name="android.permission.ACCESS_FINE_LOCATION"
        android:required="true" />
    <!--
    "Note: Registering an application handler with initialize(Context, Looper, WifiP2pManager.ChannelListener) requires the permissions
	Manifest.permission.ACCESS_WIFI_STATE and Manifest.permission.CHANGE_WIFI_STATE to perform any further peer-to-peer operations."
	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html
    -->
    <!-- android "protection level": normal - does not need runtime permission checks, is always granted when app is installed -->
    <uses-permission
        android:name="android.permission.ACCESS_WIFI_STATE"
        android:required="true" />
    <!--
    "Note: Registering an application handler with initialize(Context, Looper, WifiP2pManager.ChannelListener) requires the permissions
	Manifest.permission.ACCESS_WIFI_STATE and Manifest.permission.CHANGE_WIFI_STATE to perform any further peer-to-peer operations."
	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html
    -->
    <!-- android "protection level": normal - does not need runtime permission checks, permission always granted when app is installed -->
    <uses-permission
        android:name="android.permission.CHANGE_WIFI_STATE"
        android:required="true" />
    <!-- "Wi-Fi P2P doesn't require an internet connection, but it does use standard Java sockets, which requires the INTERNET permission."
    https://developer.android.com/training/connect-devices-wirelessly/wifi-direct#permissions -->
    <!-- android "protection level": normal - does not need runtime permission checks, permission always granted when app is installed -->
    <uses-permission
        android:name="android.permission.INTERNET"
        android:required="true" />



    <!-- Needed to keep the connection / data transfer alive for a long time when the app is in the background

         Needed on Android 9+ (API 28+) to use `Service.startForeground` to bring a started service to the foreground, which itself is
         needed on Android 8+ (API 26+) to start a foreground service (when an app activity is not visible?) with
         `Context.startForegroundService` instead of the normal `Context.startService`
         See: https://developer.android.com/guide/components/services#Foreground
    -->
    <!-- android "protection level": normal - is automatically granted at install time and does not need runtime permission checks -->
    <uses-permission
        android:name="android.permission.FOREGROUND_SERVICE"
        android:required="true" />




    <application
        android:allowBackup="false"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">


        <!--
            Because android:exported is set to "false",
            the service is only available to this app.
        -->
        <!-- consider executing in separate process by specifying attribute in the service here -->
        <service
            android:name=".SendFileOrNotifyOfIpAddressIntentService"
            android:exported="false"
            android:label="@string/wifi_direct_send_file_intent_service_label"
            android:description="@string/wifi_direct_send_file_intent_service_description"/>

        <!-- TODO use string resource for label and for description (add that) -->
        <service
            android:name=".WiFiDirectBackgroundService"
            android:exported="false"
            android:label="Wi-Fi Direct Connection Establishment Group Owner Side"/>

        <activity android:name=".MainActivity">

            <!-- make this activity appear openable from the home screen / launcher -->
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity> <!-- file provider registration needed to share files with other apps via content uris for temporary read access etc -->
        <!-- TODO define authorities string in a way that adapts to package name changes -->
        <!-- TODO from documentation of android:grantUriPermissions attribute: If you are supporting this feature, you must be sure to
              call {@link android.content.Context#revokeUriPermission Context.revokeUriPermission} when URIs are deleted from your provider.
        -->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="dev.akampf.fileshare.provider"
            android:exported="false"
            android:grantUriPermissions="true">

            <!-- specify where the file specifying sharable paths and the mapped name in the content uri are specified: -->
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/content_provider_sharable_file_paths" />
        </provider>
    </application>

</manifest>